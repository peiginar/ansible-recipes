- name: set leader nodes
  set_fact:
    drbd_leader_node:
      "{{ drbd_nodes|selectattr('leader', 'defined')|map(attribute='name')|list|join('') }}"

- name: set mynode ipv4 address
  set_fact:
    drbd_node_ipv4_address:
      "{{ drbd_nodes|selectattr('name', 'equalto', inventory_hostname_short)|map(attribute='addr')|list|join('') }}"

- name: Set authorized key for user root/ubuntu copying it from current user
  authorized_key:
    user: "{{ item }}"
    state: present
    key: "{{ lookup('file', lookup('env','HOME') + '/.ssh/id_rsa.pub') }}"
  with_items: [ 'root', '{{ ansible_user }}' ]
  tags: 'sshkey'

- name: Set servers in hosts
  lineinfile:
    dest: /etc/hosts
    insertafter: 'EOF'
    line: "{{ item.addr }} {{ item.name }}"
    state: present
  with_items: '{{ drbd_nodes }}'

- name: find hostname in hosts
  shell: "grep $(hostname) /etc/hosts| grep -v -e ^# -e ^127.0"
  register: find_myhostname_result
  changed_when: False

- name: remove loopback myhostname in hosts
  lineinfile:
    dest: /etc/hosts
    regexp: '^127.0.*{{ ansible_hostname }}'
    state: absent
  when: find_myhostname_result.rc == 0

- name: install utils packages
  apt:
    name: "{{ item }}"
    state: present
    update_cache: yes
    cache_valid_time: "{{ apt_cache_validate_time }}"
  with_items:
    - gdisk
    - software-properties-common
    - zfsutils-linux

- name: set DRBD 9 repository url
  set_fact:
    drbd_repo_url: 'ppa:linbit/linbit-drbd9-stack'

- name: DRBD 9 Repository Add. use proxy.
  apt_repository:
    repo: "{{drbd_repo_url}}"
    filename: 'drbd9'
    state: present
  environment:
    http_proxy: "{{ http_auth_proxy }}"
    https_proxy: "{{ http_auth_proxy }}"
    no_proxy: "localhost,.{{ dns_domain }}"
  when: http_auth_proxy|default('')|length() > 0

- name: DRBD 9 Repository Add. direct connect.
  apt_repository:
    repo: "{{drbd_repo_url}}"
    filename: 'drbd9'
    state: present
  when: http_auth_proxy|default('')|length() == 0

- name: DRBD 9 & DRBD Manage Install
  apt:
    name: "{{ item }}"
    state: present
    update_cache: yes
    cache_valid_time: "{{ apt_cache_validate_time }}"
  with_items:
    - drbd-utils
    - python-drbdmanage
    - drbd-dkms

- name: DRBD 9 get drbdadm api version
  shell: drbdadm --version| grep DRBDADM_API_VERSION
  register: drbdadm_api_version
  changed_when: False

- name: DRBD 9 assert drbdadm api version
  shell: /bin/false
  when: drbdadm_api_version.stdout != 'DRBDADM_API_VERSION=2'

#- name: DRBD 9 join node
#  shell: "drbdmanage howto-join {{ inventory_hostname_short }}"
#  register: howto_join
#  delegate_to: "{{ drbd_leader_node }}"

# vim: set ts=2 sw=2 et:
