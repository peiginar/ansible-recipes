- name: Create ansible work directory
  win_file:
    path: "{{ win_ansible_work }}"
    state: directory
  changed_when: False

#- name: Powershell ExecutionPolicy
#  win_shell: Set-ExecutionPolicy RemoteSigned -Scope LocalMachine -Force
#
#- name: Set proxy setting by regedit
#  win_regedit:
#    key: 'HKCU:\Software\Microsoft\Windows\CurrentVersion\Internet Settings'
#    value: ProxyEnable
#    data: 1
#    type: dword
#
#- name: Get proxy setting
#  win_shell: Get-ItemPropertyValue -Path "HKCU:\Software\Microsoft\Windows\CurrentVersion\Internet Settings" -Name ProxyEnable
#  register: reg_proxy
#
#- name: Show proxy setting
#  debug:
#    msg: "{{ reg_proxy.stdout.strip() }}"
#
#- name: Set proxy setting direct
#  win_shell: Set-ItemProperty -Path "HKCU:\Software\Microsoft\Windows\CurrentVersion\Internet Settings" -Name ProxyEnable -Value 0
#  when: reg_proxy.stdout.strip() != "0"

- name: netsh show http proxy
  win_shell: netsh winhttp show proxy
  register: netsh_http_proxy
  changed_when: False
  tags: nethttp

- name: netsh set http proxy
  win_shell: >
    netsh winhttp set proxy "{{ win_http_proxy.replace('http:','').replace('/','') }}" \
    "<local>;*.{{ dns_domain }}"
  when: netsh_http_proxy.stdout.find('no proxy server') != -1
  tags: nethttp

- name: windows update
  win_updates:
    log_path: c:\ansible_wu.txt
  when: win_update is defined or distupgrade is defined
  tags: win_update

#- name: Get Firewall rule to ping inbound
#  win_shell: >
#      netsh advfirewall firewall show rule profile=private,public name="ファイルとプリンターの共有 (エコー要求 - ICMPv4 受信)" dir=in| Select-String 'Enabled'
#  register: firewall_ping_allow
#  changed_when: False
#  tags: firewall
#
#- name: Firewall rule to allow ping inbound
#  win_shell: >
#      netsh advfirewall firewall set rule profile=private,public name="ファイルとプリンターの共有 (エコー要求 - ICMPv4 受信)" dir=in new enable=yes
#  when: firewall_ping_allow.stdout.strip()| search('Enabled:.*No$')
#  tags: firewall

- include: windows10.yml
  when: ansible_distribution_major_version|int >= 10

- name: Check chocolatey Installed
  win_shell: "[System.Environment]::GetEnvironmentVariable('ChocolateyInstall')"
  register: chocolatey_installed_env
  changed_when: False
  ignore_errors: yes
  tags: choco_setup

- name: Set chocolatey Installed variable
  set_fact:
    chocolatey_installed: "{{ chocolatey_installed_env.stdout | length }}"
  tags: choco_setup

- name: Show chocolatey Installed variable
  debug:
    var: chocolatey_installed
  tags: choco_setup

- name: Download chocolatey install.ps1
  win_get_url:
    url: https://chocolatey.org/install.ps1
    dest: "{{ win_ansible_work }}\\install.ps1"
    proxy_url: "{{ win_http_proxy }}"
  when: chocolatey_installed == "0"
  tags: choco_setup

- name: Install chocolatey
  win_shell: powershell -ExecutionPolicy RemoteSigned -File {{ win_ansible_work }}/install.ps1
  environment:
    chocolateyProxyLocation: "{{ win_http_proxy }}"
  when: chocolatey_installed == "0"
  tags: choco_setup

- name: Set chocolatey proxy setting with user/pass
  win_shell: >
    choco config set proxy {{ choco_proxy }};
    choco config set proxyUser {{ choco_proxy_user }};
    choco config set proxyPassword {{ choco_proxy_pass }};
  when: chocolatey_installed == "0" and choco_proxy is defined and choco_proxy_user is defined
  tags: choco_setup

- name: Set chocolatey proxy setting
  win_shell: >
    choco config set proxy {{ choco_proxy }};
  when: chocolatey_installed == "0" and choco_proxy is defined and choco_proxy_user is not defined
  tags: choco_setup

- name: Set chocolatey proxy setting default
  win_shell: >
    choco config set proxy {{ win_http_proxy }};
  when: chocolatey_installed == "0" and choco_proxy is not defined
  tags: choco_setup

- name: chocolatey Git install
  win_chocolatey:
    name: Git
    params: /GitAndUnixToolsOnPath /NoAutoCrlf
    state: present
  tags: choco_install

#- name: chocolatey javaruntime uninstall
#  win_chocolatey:
#    name: javaruntime
#    state: absent
#  tags: choco_install

- name: chocolatey install
  win_chocolatey:
    name: "{{ item }}"
  with_items:
    - "{{ choco_packages }}"
  when: choco_packages
  tags: choco_install

